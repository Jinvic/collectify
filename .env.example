# .env.example

# Example environment variables for configuring the Collectify application
# To use these, copy this file to `.env` and modify the values as needed.
# Docker Compose will automatically load this `.env` file.
# Your Go application will read these environment variables.

# --- Database Configuration ---
# Database type (e.g., sqlite)
COLLECTIFY_DATABASE_TYPE=sqlite

# Data Source Name for the database
# For SQLite, this is typically a file path.
# When running in Docker, the default `collectify.db` will be created inside the container's `/app` directory.
# To persist data, a volume should be mounted to `/app/data` (as shown in docker-compose.yml).
COLLECTIFY_DATABASE_DSN=collectify.db

# --- Server Configuration ---
# Port on which the server will listen
COLLECTIFY_SERVER_PORT=8080

# Server mode (e.g., release, debug)
# 'debug' mode in Gin provides detailed logging
# 'release' mode is optimized for production
COLLECTIFY_SERVER_MODE=release

# --- Recycle Bin Feature ---
# Enable or disable the recycle bin feature
# Set to true or false
# This feature is under developing, set disable as default.
# COLLECTIFY_RECYCLEBIN_ENABLE=false

# --- Authentication Configuration ---
# Enable or disable the authentication feature
# Set to true or false
COLLECTIFY_AUTH_ENABLE=false

# JWT Secret for authentication
# Required when AUTH_ENABLE=true in production mode
# For production, generate a strong secret using:
#   openssl rand -base64 32
# In debug mode, a random secret will be generated if left empty
# COLLECTIFY_AUTH_JWT_SECRET=your-super-secret-jwt-key-here

# JWT Token Expire Time (in days)
# Set to 0 for permanent tokens (no expiration)
# Default is 15 days
# COLLECTIFY_AUTH_EXPIRE_DAY=15